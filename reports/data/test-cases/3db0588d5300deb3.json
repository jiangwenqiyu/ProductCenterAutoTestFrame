{
  "uid" : "3db0588d5300deb3",
  "name" : "test_query[info8]",
  "fullName" : "testFunctions.test_basicQuery.TestBasicQuery#test_query",
  "historyId" : "7c5bd82ae6ee5e07d96a5870e0a95662",
  "time" : {
    "start" : 1641821118792,
    "stop" : 1641821118933,
    "duration" : 141
  },
  "status" : "broken",
  "statusMessage" : "KeyError: 'headers.Content-Type'",
  "statusTrace" : "self = <testFunctions.test_basicQuery.TestBasicQuery object at 0x0000019052058978>\ninfo = {'name': '/sysback/category/productplatformcategory/getPlatCategoryByUuid', 'request': {'data': {'platCategoryUuid': '...ion/json']}, {'eq': ['content.retStatus', '1']}, {'eq': ['content.retMessage', '']}, {'eq': ['content.timestamp', 0]}]}\n\n    @pytest.mark.parametrize('info', YamlUtil().read_yaml('修改分类.yml')['teststeps'])\n    def test_query(self, info):\n        method = info['request']['method'].lower()\n        url = info['request']['url']\n        header = info['request']['headers']\n        header['cookie'] = 'uc_token=62d031124c47483da282849da1955475'\n        data = None\n        param = None\n        for key in info['request']:\n            if key == 'json':\n                data = json.dumps(info['request']['json'])\n            elif key == 'data':\n                data = info['request']['data']\n            elif key == 'params':\n                param = info['request']['params']\n    \n    \n        res = self.requests.request(method, url, header, data = data, params = param)\n        for val in info['validate']:\n            for k in val:\n                if k == 'eq':\n>                   assert res.json()[val[k][0]] == val[k][1]\nE                   KeyError: 'headers.Content-Type'\n\ntestFunctions\\test_basicQuery.py:33: KeyError",
  "flaky" : true,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "testFunctions"
  }, {
    "name" : "suite",
    "value" : "test_basicQuery"
  }, {
    "name" : "subSuite",
    "value" : "TestBasicQuery"
  }, {
    "name" : "host",
    "value" : "MM-202009090019"
  }, {
    "name" : "thread",
    "value" : "4760-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testFunctions.test_basicQuery"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "info",
    "value" : "{'name': '/sysback/category/productplatformcategory/getPlatCategoryByUuid', 'request': {'data': {'platCategoryUuid': '30000'}, 'headers': {'Authorization': 'bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX25hbWUiOiJhZG1pbiIsInNjb3BlIjpbImFsbCJdLCJleHAiOjE2MjA4MDU5MTYsImF1dGhvcml0aWVzIjpbImFhIl0sImp0aSI6ImJjYzkwNDBkLTA0NTMtNDg5ZS1iMTM5LWEzZGU2MjQzZmJlMyIsImNsaWVudF9pZCI6ImFkbWluIiwidG9rZW4iOiJsb2dpbl90b2tlbl9hYmMzMjNjNmQwZWY0YTg2OWVhYjg0NjZmMTQ5MDgwNiJ9.GGr40pJ6GuZYkoeYPrFwJJDMAcmAnbzV1z8E3siyjtMM-AMkJA8RxeMz0k457o7WTGdHmGKprSjxll0n4dEfaUusHqRWqnZ9ApDyMqwmL_3DE6hieDpd09-ScpTZ2Ptl8JFOrSws7aT7q8W4QMUvhFA501bV8rMLGWyXkWWFIz6fzRbS7_pNJzogk1a8UfYAqjw25Mvh5XyEjvCpi0szty-VFPeWDTNfuQavQ0oQ68Cfra3K0Wa_ZsoTzeLVOoXSZgLx7iEMQhGHLGvPRAmv15QZfbUeCPKIbYK1o9IvjEIM2v-aEKMSOX8OdLSUgnaBd-IFu3dRFuXP2_5G0D1uvQ', 'Content-Type': 'application/x-www-form-urlencoded', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36', 'X-Token': 'undefined', 'token': 'undefined'}, 'method': 'POST', 'params': {'buttonId': '2', 'menuId': '202'}, 'url': 'http://product.pre.xinfangsheng.com/sysback/category/productplatformcategory/getPlatCategoryByUuid'}, 'validate': [{'eq': ['retStatus', '1']}, {'eq': ['headers.Content-Type', 'application/json']}, {'eq': ['content.retStatus', '1']}, {'eq': ['content.retMessage', '']}, {'eq': ['content.timestamp', 0]}]}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "a98176e3f1549641",
      "status" : "broken",
      "statusDetails" : "KeyError: 'status_code'",
      "time" : {
        "start" : 1641820987281,
        "stop" : 1641820987468,
        "duration" : 187
      }
    }, {
      "uid" : "d5d8f23f25e26635",
      "status" : "broken",
      "statusDetails" : "KeyError: 0",
      "time" : {
        "start" : 1641820764472,
        "stop" : 1641820764669,
        "duration" : 197
      }
    }, {
      "uid" : "ea140ec794d0c53c",
      "status" : "broken",
      "statusDetails" : "TypeError: 'data' is an invalid keyword argument for this function",
      "time" : {
        "start" : 1641820716081,
        "stop" : 1641820716082,
        "duration" : 1
      }
    }, {
      "uid" : "a50f3df48ed0e082",
      "status" : "broken",
      "statusDetails" : "ValueError: invalid mode: 'as '",
      "time" : {
        "start" : 1641820686491,
        "stop" : 1641820686491,
        "duration" : 0
      }
    }, {
      "uid" : "b72d0322ee727f94",
      "status" : "broken",
      "statusDetails" : "TypeError: request() missing 1 required positional argument: 'header'",
      "time" : {
        "start" : 1641820593567,
        "stop" : 1641820593567,
        "duration" : 0
      }
    }, {
      "uid" : "c097975fad845d5c",
      "status" : "broken",
      "statusDetails" : "TypeError: request() missing 1 required positional argument: 'header'",
      "time" : {
        "start" : 1641820557209,
        "stop" : 1641820557209,
        "duration" : 0
      }
    }, {
      "uid" : "b128ac4a4f96baec",
      "status" : "broken",
      "statusDetails" : "TypeError: request() missing 1 required positional argument: 'header'",
      "time" : {
        "start" : 1641820383309,
        "stop" : 1641820383309,
        "duration" : 0
      }
    }, {
      "uid" : "4dc7dbe27d101ac0",
      "status" : "broken",
      "statusDetails" : "TypeError: request() missing 1 required positional argument: 'header'",
      "time" : {
        "start" : 1641820062987,
        "stop" : 1641820062988,
        "duration" : 1
      }
    }, {
      "uid" : "ec55edc70d866624",
      "status" : "broken",
      "statusDetails" : "TypeError: request() missing 1 required positional argument: 'header'",
      "time" : {
        "start" : 1641820006827,
        "stop" : 1641820006827,
        "duration" : 0
      }
    }, {
      "uid" : "a453e2bcc0ade377",
      "status" : "broken",
      "statusDetails" : "TypeError: request() missing 1 required positional argument: 'header'",
      "time" : {
        "start" : 1641819912598,
        "stop" : 1641819912598,
        "duration" : 0
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "3db0588d5300deb3.json",
  "parameterValues" : [ "{'name': '/sysback/category/productplatformcategory/getPlatCategoryByUuid', 'request': {'data': {'platCategoryUuid': '30000'}, 'headers': {'Authorization': 'bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX25hbWUiOiJhZG1pbiIsInNjb3BlIjpbImFsbCJdLCJleHAiOjE2MjA4MDU5MTYsImF1dGhvcml0aWVzIjpbImFhIl0sImp0aSI6ImJjYzkwNDBkLTA0NTMtNDg5ZS1iMTM5LWEzZGU2MjQzZmJlMyIsImNsaWVudF9pZCI6ImFkbWluIiwidG9rZW4iOiJsb2dpbl90b2tlbl9hYmMzMjNjNmQwZWY0YTg2OWVhYjg0NjZmMTQ5MDgwNiJ9.GGr40pJ6GuZYkoeYPrFwJJDMAcmAnbzV1z8E3siyjtMM-AMkJA8RxeMz0k457o7WTGdHmGKprSjxll0n4dEfaUusHqRWqnZ9ApDyMqwmL_3DE6hieDpd09-ScpTZ2Ptl8JFOrSws7aT7q8W4QMUvhFA501bV8rMLGWyXkWWFIz6fzRbS7_pNJzogk1a8UfYAqjw25Mvh5XyEjvCpi0szty-VFPeWDTNfuQavQ0oQ68Cfra3K0Wa_ZsoTzeLVOoXSZgLx7iEMQhGHLGvPRAmv15QZfbUeCPKIbYK1o9IvjEIM2v-aEKMSOX8OdLSUgnaBd-IFu3dRFuXP2_5G0D1uvQ', 'Content-Type': 'application/x-www-form-urlencoded', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36', 'X-Token': 'undefined', 'token': 'undefined'}, 'method': 'POST', 'params': {'buttonId': '2', 'menuId': '202'}, 'url': 'http://product.pre.xinfangsheng.com/sysback/category/productplatformcategory/getPlatCategoryByUuid'}, 'validate': [{'eq': ['retStatus', '1']}, {'eq': ['headers.Content-Type', 'application/json']}, {'eq': ['content.retStatus', '1']}, {'eq': ['content.retMessage', '']}, {'eq': ['content.timestamp', 0]}]}" ]
}